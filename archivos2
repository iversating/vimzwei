#! /bin/sh
rm -f archivos
if [ ! -f .ingress/tf.tfvars ]
then
openssl genrsa -out .ingress/$MYSERVER.pem 2048
ssh-keygen -y -f .ingress/$MYSERVER.pem > .ingress/$MYSERVER.pub
cat <<EOF >> .ingress/tf.tfvars
aws_access_key = "$accesskey"
aws_secret_key = "$secretkey"
cloudflare_email = "$EML"
cloudflare_api_key = "$CFAPI"
EOF
else
    continue
fi

mkdir $MYDOMAIN/ $MYDOMAIN/.sh/
cp .ingress/tf.tfvars $MYDOMAIN/terraform.tfvars
cp $MYDOMAIN/terraform.tfvars $MYDOMAIN/.sh/terraform.tfvars
cloudshell download .ingress/$MYSERVER.pem

cat <<EOF >> destruir
#! /bin/sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********                         CONSTRUCTOR WEB 'VIM-v2.0'                        ***********"
echo "***********                                                                           ***********"
echo "***********                    https://ventasimpactantes.com/script                   ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========                           !  A T E N C I Ó N  !                           ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
DOMINIO=$MYDOMAIN
echo ""
echo -n " * ¿ ESTAS SEGURO DE ELIMINAR EL SERVIDOR PARA \$DOMINIO Y BORRAR LA PÁGINA WEB ? *"
echo ""
echo ""
echo -n " - Asegúrate de haber realizado una copia de seguridad de tus datos en \$DOMINIO"
echo ""
echo ""
echo -n " * ESTE PROCESO ES ¡IRREVERSIBLE!. Escribe 'eliminar' para proceder  [ salir / eliminar ]: "
read INPUT
if [ \$INPUT = "ELIMINAR" -o \$INPUT = "Eliminar" -o \$INPUT = "eliminar" ]
then
continue
else
exit
fi
cd ~/\$DOMINIO/
terraform destroy --auto-approve
cd
rm -r \$DOMINIO --force
rm destruir cred archivos pem terraform.tfstate -f
EOF

cat <<EOF >> cred
DOMINIO=$MYDOMAIN
cd ~/\$DOMINIO/
terraform output
EOF

cat <<EOF >> pem
cloudshell download .ingress/$MYSERVER.pem
EOF

cat <<EOF >> $MYDOMAIN/.sh/vim
sudo su -
EOF

cat <<EOF >> $MYDOMAIN/.sh/sh.sh
DOMINIO=$MYDOMAIN
mkdir ".\$DOMINIO"
sudo chmod +x *.sh
sudo mv centminmod.sh wp.sh varwp.sh aws-config.sh ssllabs.sh restart.sh bk-local.sh rds.sh ejecutelocal.sh wordpress.sh permisos.sh createbak.sh ejecutebak.sh deletebak.sh uninstall.sh sub.sh mysql.sh loginrds.sh terraform.tfvars s3.tf s3.tf s3_var.tf subdoutputs.tf subdom.sh subdominio.sh cfsubd subuninstall.sh .\$DOMINIO
sudo yum -y update
sudo yum install nano wget curl bind-utils unzip -y
sudo cp -ar ".\$DOMINIO" /root/"\$DOMINIO"
wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
sudo unzip ./terraform_0.12.24_linux_amd64.zip -d /usr/local/bin/
sudo rm -fr terraform_0.12.24_linux_amd64.zip
sudo sh hostname.sh
sudo mv vim.sh /root/vim
sudo rm -f sh.sh
EOF

#DATE HOSTNAME
cat <<EOF >> $MYDOMAIN/.sh/hostname.sh
TIMEZONE=America/Bogota
SERVIDOR=servidor.$MYDOMAIN
sudo timedatectl set-timezone "\$TIMEZONE"
sudo rm -f /etc/hostname
sudo echo \$SERVIDOR >> /etc/hostname
sudo hostnamectl set-hostname "\$SERVIDOR"
sudo hostname \$SERVIDOR
rm -f hostname.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/vim.sh
DOMINIO=$MYDOMAIN
MAIL=$EML
CFAP=$CFAPI
curl -X GET "https://api.cloudflare.com/client/v4/zones?name=\$DOMINIO&page=1&per_page=20&order=status&direction=desc&match=all" \-H "X-Auth-Email: \$MAIL" \-H "X-Auth-Key: \$CFAP" \-H "Content-Type: application/json" >> zone.txt
STATUS="\$(cat zone.txt | sed -r 's/","/\n/g' | sed -n '/status/p' | sed 's/{.*":"//' | sed 's/status":"//' )"
NMSERV="\$(cat zone.txt | sed -r 's/","/\n/g' | sed -r 's/\["/\n/g' | sed -r 's/"\]/\n/g' | sed -n '/ns.cloudflare.com/p' | sed 's/{.*":\]//' )"
echo \$NMSERV >> dn.txt
sed 's/ /\n/g' dn.txt >> dnscf.txt
DNS1="\$(sed -n 1p dnscf.txt)"
DNS2="\$(sed -n 2p dnscf.txt)"
if [ \$STATUS = active ]; then
  rm -f zone.txt dn.txt dnscf.txt
  sh /root/$MYDOMAIN/varwp.sh
else
  printf "\033c"
  echo "*************************************************************************************************"
  echo "***********                                                                           ***********"
  echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
  echo "***********                                                                           ***********"
  echo "***********                         !  A T E N C I Ó N  !                             ***********"
  echo "***********                                                                           ***********"
  echo "===========                                                                           ==========="
  echo "===========         E L   D O M I N I O   A Ú N   N O   E S T A   A C T I V O         ==========="
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "===========                                                                           ==========="
  echo "=========== Asegúrate de cambiar y actualizar los DNS generados por Cloudflare en     ==========="
  echo "=========== Namecheap.com (o donde hayas registrado tu dominio), estos son los DNS:   ==========="
  echo "===========                                                                           ==========="
  echo "=========== \$DNS1                                                                     "
  echo "=========== \$DNS2                                                                     "
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "***********                                                                           ***********"
  echo "*********** Cuando este activo el dominio ejecuta de nuevo el script escribiendo:     ***********"
  echo "***********                                                                           ***********"
  echo "***********                        sh vim y oprime [enter]                            ***********"
  echo "***********                                                                           ***********"
  echo "*************************************************************************************************"
  rm -f zone.txt dn.txt dnscf.txt
  exit
fi
EOF

cat <<EOF >> $MYDOMAIN/.sh/varwp.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                         !  B I E N V E N I D O  !                         ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========       C O N F I G U R A   L A S   C R E D E N C I A L E S   W E B         ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
DOMINIO=$MYDOMAIN
echo ""
echo "            Genera los datos de acceso para tu página web \$DOMINIO                              "
echo ""
echo -n " - Escribe un 'USUARIO' para ingresar al sitio WordPress, luego oprime [enter] = "
read INPUT
if [ \$INPUT ]; then
WPUSER="\$INPUT"
fi
echo ""
echo -n " - Crea una 'CONTRASEÑA' que contenga mayúsculas y símbolos y oprime [enter] = "
read INPUT
if [ \$INPUT ]; then
WPPASSS="\$INPUT"
WPPAS="\$(echo "\$WPPASSS" | sed 's/\\$/\\\\$/g')"
WPPASS="\$(echo "\$WPPAS" | sed 's/\\$/\\\\$/g')"
fi
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                    https://ventasimpactantes.com/script                   ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========                          !  R E V I S E M O S  !                          ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo ""
echo "                     ESTAS SON LOS DATOS DE ACCESO PARA \$DOMINIO:                  "
echo ""
echo "           'USUARIO' de WordPress  = \$WPUSER                                 "
echo "           'CONTRASEÑA' De Usuario = \$WPPASSS                       "
echo ""
echo -n "   ¿ Son Correctos Estos Datos ?                                                       "
echo ""
echo ""
echo -n " -  Escribe 'crear' para ejecutar wordpress"
echo ""
echo -n " -  Escribe 'cambiar' para editar las credenciales de nuevo...                   "
echo ""
echo -n " -  Escribe 'salir' para cancelar este proceso  [ salir / cambiar / crear ]: "
read INPUT
if [ \$INPUT = "salir" -o \$INPUT = "Salir" -o \$INPUT = "SALIR" ]
then
  printf "\033c"
  echo "*************************************************************************************************"
  echo "***********                                                                           ***********"
  echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
  echo "***********                                                                           ***********"
  echo "***********                    https://ventasimpactantes.com/script                   ***********"
  echo "***********                                                                           ***********"
  echo "===========                                                                           ==========="
  echo "===========                          !  C A N C E L A D O  !                          ==========="
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "***********                                                                           ***********"
  echo "***********                                                                           ***********"
  echo "***********    Para ejecutar de nuevo el Script escribe 'sh vim' y oprime [enter]     ***********"
  echo "***********                                                                           ***********"
  echo "***********                                                                           ***********"
  echo "*************************************************************************************************"
  echo ""
  exit
elif [ \$INPUT = "cambiar" -o \$INPUT = "CAMBIAR" -o \$INPUT = "Cambiar"  ]
then
  sh /root/$MYDOMAIN/varwp.sh
else
  sed -i "s/WPPS/\$WPPASS/g" /root/wordpress
  sed -i "s/WPSR/\$WPUSER/g" /root/wordpress
  mv /root/\$DOMINIO/centminmod.sh /root/
  sh /root/centminmod.sh
  sh /root/$MYDOMAIN/wp.sh
fi
EOF

cat <<EOF >> $MYDOMAIN/.sh/centminmod.sh
SERVIDOR=servidor.$MYDOMAIN
IP="\$(dig myip.opendns.com @resolver1.opendns.com +short)"
echo \$IP \$SERVIDOR hostname >> /etc/hosts
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========     C O N F I G U R A C I Ó N   I N I C I A L   D E   S E R V I D O R     ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo "***********                                                                           ***********"
echo "***********                                                                           ***********"
echo "***********          Este proceso puede durar de 60 a 90 minutos en terminar          ***********"
echo "***********                                                                           ***********"
echo "***********                                                                           ***********"
echo "======================================  I N I C I A N D O  ======================================"
sleep 11
echo ""
mkdir -p /etc/centminmod
touch /etc/centminmod/custom_config.inc

#INSTALL CMM
curl -O https://centminmod.com/betainstaller73.sh
chmod 0700 betainstaller73.sh
bash betainstaller73.sh

#CUSTOM CONFIG
# enable letsencrypt ssl certificate + dual RSA+ECDSA ssl certs https://centminmod.com/acmetool/
echo "LETSENCRYPT_DETECT='y'" >> /etc/centminmod/custom_config.inc
echo "DUALCERTS='y'" >> /etc/centminmod/custom_config.inc
# enable ECC 256bit ECDSA self-signed SSL certificate generation https://community.centminmod.com/posts/82177/
echo "SELFSIGNEDSSL_ECDSA='y'" >> /etc/centminmod/custom_config.inc
echo "NGINX_IPV='y'" >> /etc/centminmod/custom_config.inc
# dynamically tune nginx ssl_session_cache in /usr/local/nginx/conf/ssl_include.conf based on system detected memory
# https://community.centminmod.com/posts/76615/
echo "NGINX_SSLCACHE_ALLOWOVERRIDE='y'" >> /etc/centminmod/custom_config.inc
# override Nginx default OCSP response cache refresh time 1h (3600 seconds) to 24hrs (86400 seconds)
# https://community.centminmod.com/threads/19515/
echo "NGINX_STAPLE_CACHE_OVERRIDE='y'" >> /etc/centminmod/custom_config.inc
echo "NGINX_STAPLE_CACHE_TTL='86400'" >> /etc/centminmod/custom_config.inc
# SET_DEFAULT_MYSQLCHARSET='utf8mb4' to override MariaDB MySQL
# default characterset and collation from default utf8 to utf8mb4
# https://community.centminmod.com/threads/17949/
echo "SET_DEFAULT_MYSQLCHARSET='utf8mb4'" >> /etc/centminmod/custom_config.inc
# enable nginx backlog override https://community.centminmod.com/threads/17620/
echo "AUTOHARDTUNE_NGINXBACKLOG='y'" >> /etc/centminmod/custom_config.inc
# enable zstd compressed logrotation for nginx & php-fpm https://community.centminmod.com/threads/16374/
echo "ZSTD_LOGROTATE_NGINX='y'" >> /etc/centminmod/custom_config.inc
echo "ZSTD_LOGROTATE_PHPFPM='y'" >> /etc/centminmod/custom_config.inc
# enable nginx zero downtime on the fly nginx binary upgrades https://community.centminmod.com/threads/8000/
echo "NGINX_ZERODT='y'" >> /etc/centminmod/custom_config.inc
# enable brotli compression https://community.centminmod.com/threads/10688/
echo "NGINX_LIBBROTLI='y'" >> /etc/centminmod/custom_config.inc
echo "NGXDYNAMIC_BROTLI='y'" >> /etc/centminmod/custom_config.inc
# boost PHP 7 performance by enabling Profile Guided Optimisation flag
# https://centminmod.com/perf/
# will dramatically increase PHP-FPM compile/install times but result in
# 5-20% faster PHP 7+ performance. PHP_PGO='y' only works with servers with
# 2+ or more cpu threads. However, you can force PHP PGO optimisations with
# 1 cpu thread servers via PHP_PGO_ALWAYS='y'
echo "PHP_PGO='y'" >> /etc/centminmod/custom_config.inc
echo "PHP_PGO_ALWAYS='y'" >> /etc/centminmod/custom_config.inc
# php compression extensions https://community.centminmod.com/posts/70777/
echo "PHP_BROTLI='y'" >> /etc/centminmod/custom_config.inc
echo "PHP_LZFOUR='y'" >> /etc/centminmod/custom_config.inc
echo "PHP_LZF='y'" >> /etc/centminmod/custom_config.inc
echo "PHP_ZSTD='y'" >> /etc/centminmod/custom_config.inc
# php file info
echo "PHPFINFO='y'" >> /etc/centminmod/custom_config.inc
echo "VHOSTCTRL_CLOUDFLAREINC='y'"  >> /etc/centminmod/custom_config.inc

#PRE-CREATE-PEM
openssl dhparam -out /usr/local/nginx/conf/ssl/dhparam.pem 2048

#AUDIT CSF FIREWALL
# install and configure auditd https://community.centminmod.com/posts/37680/
echo "AUDITD_ENABLE='y'" >> /etc/centminmod/custom_config.inc
/usr/local/src/centminmod/tools/auditd.sh setup

#CRON EMAIL
EMAIL=admin@$MYDOMAIN
# setup email alerts for diskalert cronjob /etc/cron.daily/diskalert
# https://community.centminmod.com/posts/59973/
sed -i "s|EMAIL=.*|EMAIL='\$EMAIL'|" /etc/cron.daily/diskalert

#CLOUDFLARE
# cloudflare cronjob
# https://community.centminmod.com/threads/6241/
crontab -l > cronjoblist
sed -i '/csfcf.sh/d' cronjoblist
echo "23 */36 * * * /usr/local/src/centminmod/tools/csfcf.sh auto >/dev/null 2>&1" >> cronjoblist
crontab cronjoblist
rm -f cronjoblist

#PHP
sed -i 's/max_execution_time = 60/max_execution_time = 600/g' /etc/centminmod/php.d/a_customphp.ini
fpmrestart

#SSL
cd /usr/local/src/centminmod/addons
sudo echo -e "y" | ./acmetool.sh acmeinstall

#INIT CENTMINMOD
echo "$EML" >> /etc/centminmod/email-primary.ini
echo "$EML" >> /etc/centminmod/email-secondary.ini
rm -f /root/vim /root/betainstaller73.sh
sed -i "s/PUREFTPD_DISABLED='n'/PUREFTPD_DISABLED='y'/g" /usr/local/src/centminmod/centmin.sh
sudo touch /etc/ssl/private/pure-ftpd-dhparams.pem
sed -i '5i return 444;' /usr/local/nginx/conf/conf.d/virtual.conf
rm -rf /usr/local/nginx/conf/conf.d/demodomain.com.conf
rm -rf /home/nginx/domains/demodomain.com
rm -f /root/centminmod.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/wp.sh
if [ -d /home/nginx/domains/$MYDOMAIN ]
then
  printf "\033c"
  echo "*************************************************************************************************"
  echo "***********                                                                           ***********"
  echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
  echo "***********                                                                           ***********"
  echo "***********                    https://ventasimpactantes.com/script                   ***********"
  echo "***********                                                                           ***********"
  echo "===========                                                                           ==========="
  echo "===========       !  W O R D P R E S S   Y A   E S T A   I N S T A L A D O  !         ==========="
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "***********                                                                           ***********"
  echo "***********    Si necesitas instalar WordPress desde cero debes eliminarlo primero    ***********"
  echo "***********    sh $MYDOMAIN/uninstall.sh                                           "
  echo "***********                                                                           ***********"
  echo "*************************************************************************************************"
  echo ""
  exit
else
  continue
fi
DOMINIO="$MYDOMAIN"
WPUSER="WPSR"
WPPASS="WPPS"
EMAIL='admin@$MYDOMAIN'
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                   https://ventasimpactantes.com/script                    ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========           !  C O N F I G U R A N D O   A M A Z O N   R D S  !             ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
if [ ! -d .aws ]
then
  sh /root/\$DOMINIO/aws-config.sh
else
  continue
fi
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                   https://ventasimpactantes.com/script                    ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========      !  I N I C I A N D O    C R E A C I Ó N    W O R D P R E S S  !      ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo -e "22\ny\n\$DOMINIO\ny\ny\n4\n\n\n\n\nn\nn\ny\ny\n\$WPUSER\n\$WPPASS\n\$EMAIL\n1\nn\ny\n24\ny\n24" | centmin
sh /root/"\$DOMINIO"/ssllabs.sh
sh /root/"\$DOMINIO"/bk-local.sh
sh /root/"\$DOMINIO"/rds.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                   https://ventasimpactantes.com/script                    ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========             !  C O N F I G U R A N D O   W O R D P R E S S  !             ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
sh /root/"\$DOMINIO"/wordpress.sh
sh /root/"\$DOMINIO"/permisos.sh
echo "Creando Copia de Seguridad"
echo -e "inicio" | sh /root/"\$DOMINIO"/createbak.sh > /dev/null 2>&1
#rm -f /root/wordpress
mv /root/"\$DOMINIO"/sub.sh /root/sub
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                             ¡ G E N I A L !                               ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========    ! W O R D P R E S S   I N S T A L A D O   E X I T O S A M E N T E !    ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo ""
echo "           ¡ F A B U L O S O ! Ya puedes entrar a tu Panel de Wordpress en el siguiente          "
echo ""
echo "           enlace, inicia sesión con el Usuario y Contraseña que creaste:                        "
echo ""
echo ""
echo "           https://\$DOMINIO/wp-admin/                                                  "
echo ""
echo ""
echo ""
rm -f /root/vim
rm -f /home/nginx/domains/$MYDOMAIN/public/maintenance.html
EOF

cat <<EOF >> $MYDOMAIN/.sh/aws-config.sh
DOMINIO=$MYDOMAIN
accesskey="$accesskey"
secretkey="$secretkey"
yum install python36 -y
echo -e "y" | pip3 uninstall awscli
pip3 install awscli --upgrade --user
export PATH=~/.local/bin:\$PATH
PATH=~/.local/bin:\$PATH
sudo chmod 755 /root/.local/bin/aws
sudo echo -e "\$accesskey\n\$secretkey\nus-east-1\njson\n" | aws configure
RDSHOSTS=\`aws rds describe-db-instances | sed -n '/Address/p' | sed 's/Address//g; s/://g; s/,//g; s/\\"//g; s/ //g;'\`
sed -i "s/RDSHOSTS/\$RDSHOSTS/g" /root/\$DOMINIO/*.sh
rm -r /root/\$DOMINIO/aws-config.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/ssllabs.sh
DOMINIO=$MYDOMAIN
sed -i 's/TLSv1 TLSv1.1 //g' /usr/local/nginx/conf/ssl_include.conf
rm -r /root/"\$DOMINIO"/ssllabs.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/restart.sh
fpmrestart
ngxrestart
mysqlrestart
EOF

cat <<EOF >> $MYDOMAIN/.sh/bk-local.sh
DOMINIO=$MYDOMAIN
rm -rf /root/"\$DOMINIO"/backups-wp /root/"\$DOMINIO"/backups-db
mkdir /root/"\$DOMINIO"/backups-wp /root/"\$DOMINIO"/backups-db
cp /home/nginx/domains/"\$DOMINIO"/public/wp-config.php /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php
find /home/nginx/domains/"\$DOMINIO"/public/. -type f -exec chmod 664 {} +
find /home/nginx/domains/"\$DOMINIO"/public/. -type d -exec chmod 775 {} +
chmod 660 /home/nginx/domains/"\$DOMINIO"/public/wp-config.php
WPDBNAME=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_NAME | cut -d \\' -f 4\`
WPDBUSER=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_USER | cut -d \\' -f 4\`
WPDBPASS=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_PASSWORD | cut -d \\' -f 4\`
cp -ar /home/nginx/domains/"\$DOMINIO" /root/"\$DOMINIO"/backups-wp/local-"\$DOMINIO"
mysqldump -u "\$WPDBUSER" -h localhost "\$WPDBNAME" -p"\$WPDBPASS" > /root/"\$DOMINIO"/backups-db/local-"\$DOMINIO"-db-bk.sql
EOF

cat <<EOF >> $MYDOMAIN/.sh/ejecutelocal.sh
#EJECUTE BACKUP LOCAL
DOMINIO="$MYDOMAIN"
WPDBNAME=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_NAME | cut -d \\' -f 4\`
WPDBUSER=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_USER | cut -d \\' -f 4\`
WPDBPASS=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_PASSWORD | cut -d \\' -f 4\`
rm -r /home/nginx/domains/"\$DOMINIO" --force
cp -ar /root/"\$DOMINIO"/backups-wp/local-"\$DOMINIO" /home/nginx/domains/"\$DOMINIO"
mysql -u "\$WPDBUSER" -h localhost "\$WPDBNAME" -p"\$WPDBPASS" < /root/"\$DOMINIO"/backups-db/local-"\$DOMINIO"-db-bk.sql
sh /root/"\$DOMINIO"/restart.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/rds.sh
DOMINIO="$MYDOMAIN"
MYSERVER="$MYSERVER"
RDSHOST="RDSHOSTS"
RDSPASS="$MYDBPASS"
RDSNAME="$MYDBNAME"
if ! grep -q "3306" /etc/csf/csf.conf ;
then
  sed -i 's|TCP_IN = "20,21,22|TCP_IN = "22|' /etc/csf/csf.conf
  sed -i 's|TCP_OUT = "3306,|TCP_OUT = "|' /etc/csf/csf.conf
  sed -i 's|TCP_OUT = "|TCP_OUT = "3306,|' /etc/csf/csf.conf
  csf -r
else
  continue
fi
WPDBNAME=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_NAME | cut -d \\' -f 4\`
WPDBUSER=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_USER | cut -d \\' -f 4\`
WPDBPASS=\`cat /home/nginx/domains/"\$DOMINIO"/public/bk-wp-config-local.php | grep DB_PASSWORD | cut -d \\' -f 4\`
mysql -u "\$MYSERVER" -h"\$RDSHOST" -D "\$RDSNAME" -p"\$RDSPASS" < /root/"\$DOMINIO"/backups-db/local-"\$DOMINIO"-db-bk.sql
sed -i "s/\$WPDBNAME/\$RDSNAME/g; s/\$WPDBUSER/\$MYSERVER/g; s/localhost/\$RDSHOST/g; s/'\$WPDBPASS'/'\$RDSPASS'/g" /home/nginx/domains/"\$DOMINIO"/public/wp-config.php
EOF

cat <<EOF >> $MYDOMAIN/.sh/wordpress.sh
DOMINIO=$MYDOMAIN
PTH="/home/nginx/domains/"\$DOMINIO"/public/"
wp core language install es_ES --activate --path="\$PTH" --allow-root
wp language plugin update --all --path="\$PTH" --allow-root
wp language theme update --all --path="\$PTH" --allow-root
wp rewrite structure '/%postname%/' --path="\$PTH" --allow-root
wp option update blogdescription '' --path="\$PTH" --allow-root
wp option update posts_per_page 04 --path="\$PTH" --allow-root
wp option update timezone_string 'America/Bogota' --path="\$PTH" --allow-root
wp option update start_of_week 1 --path="\$PTH" --allow-root
wp option update date_format 'd/m/Y' --path="\$PTH" --allow-root
wp option update users_can_register 1 --path="\$PTH" --allow-root
wp post delete 1 --path="\$PTH" --allow-root
wp theme install astra --activate --path="\$PTH" --allow-root
wp theme delete twentytwenty --path="\$PTH" --allow-root
wp theme delete twentyseventeen --path="\$PTH" --allow-root
wp theme delete twentynineteen --path="\$PTH" --allow-root
wp post create --post_type=page --post_title='Política de Privacidad' --post_status=future --path="\$PTH" --allow-root
wp post create --post_type=page --post_title='Términos y Condiciones' --post_status=future --path="\$PTH" --allow-root
wp post create --post_type=page --post_title='Cookies' --post_status=future --path="\$PTH" --allow-root
wp plugin deactivate cache-enabler --path="\$PTH" --allow-root
wp plugin uninstall cache-enabler --path="\$PTH" --allow-root
wp plugin install elementor --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/elementor-pro.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/astra-pro-addon.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/astra-pro-sites.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/ultimate-elementor.zip --activate --path="\$PTH" --allow-root
wp plugin install essential-addons-for-elementor-lite --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/thrive-architect.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/thrive-leads.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/thrive-optimize.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/thrive-ultimatum.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/thrive-headline-optimizer.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/updraftplus-premium.zip --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/wp-fusion.zip --activate --path="\$PTH" --allow-root
wp plugin install cartflows --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/cartflows-pro.zip --path="\$PTH" --allow-root
wp plugin install https://github.com/epayco/Plugin_ePayco_WooCommerce/releases/download/V4.0.x/Plugin_ePayco_WooCommerce_4.0.x.zip --activate --path="\$PTH" --allow-root
wp plugin activate akismet --path="\$PTH" --allow-root
wp plugin install code-snippets --activate --path="\$PTH" --allow-root
wp plugin install aws-cdn-by-wpadmin --activate --path="\$PTH" --allow-root
wp plugin install duracelltomi-google-tag-manager --activate --activate --path="\$PTH" --allow-root
wp plugin install smartcrawl-seo --activate --path="\$PTH" --allow-root
wp plugin install post-smtp --activate --path="\$PTH" --allow-root
wp plugin install hummingbird-performance --activate --path="\$PTH" --allow-root
wp plugin install redirection --activate --path="\$PTH" --allow-root
wp plugin install wp-stateless --activate --path="\$PTH" --allow-root
wp plugin install commonwp --activate --path="\$PTH" --allow-root
wp plugin install creame-whatsapp-me --activate --path="\$PTH" --allow-root
wp plugin install woocommerce --activate --path="\$PTH" --allow-root
wp plugin install departamentos-y-ciudades-de-colombia-para-woocommerce --activate --path="\$PTH" --allow-root
wp plugin install facebook-for-woocommerce --activate --path="\$PTH" --allow-root
wp plugin install https://github.com/iversating/vim2.0/raw/master/plgwp/google-ads-for-woocommerce.zip --activate --path="\$PTH" --allow-root
wp plugin install adapta-rgpd --activate --path="\$PTH" --allow-root
wp plugin install groundhogg --activate --activate --path="\$PTH" --allow-root
wp plugin install tutor --activate --path="\$PTH" --allow-root
wp language plugin update --all --path="\$PTH" --allow-root
wp language theme update --all --path="\$PTH" --allow-root
EOF

cat <<EOF >> $MYDOMAIN/.sh/permisos.sh
DOMINIO="$MYDOMAIN"
find /home/nginx/domains/"\$DOMINIO"/public/. -type f -exec chmod 664 {} +
find /home/nginx/domains/"\$DOMINIO"/public/. -type d -exec chmod 775 {} +
chmod 660 /home/nginx/domains/"\$DOMINIO"/public/wp-config.php
chmod 777 -R /home/nginx/domains/"\$DOMINIO"/public/wp-content/plugins/
chmod 777 -R /home/nginx/domains/"\$DOMINIO"/public/wp-content/themes/
sh /root/"\$DOMINIO"/restart.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/createbak.sh
DOMINIO="$MYDOMAIN"
MYSERVER="$MYSERVER"
RDSHOST="RDSHOSTS"
RDSPASS="$MYDBPASS"
RDSNAME="$MYDBNAME"
echo ""
echo -n "Nombre para la copia de seguridad? = "
read INPUT
if [ \$INPUT ]; then
  BAK="\$INPUT"
fi
cp -ar /home/nginx/domains/"\$DOMINIO" /root/"\$DOMINIO"/backups-wp/"\$BAK"-"\$DOMINIO"
mysqldump -u "\$MYSERVER" -h"\$RDSHOST" "\$RDSNAME" -p"\$RDSPASS" > /root/"\$DOMINIO"/backups-db/"\$BAK"-db-bk.sql
sh /root/"\$DOMINIO"/restart.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/ejecutebak.sh
#EJECUTE BACKUP
DOMINIO="$MYDOMAIN"
MYSERVER="$MYSERVER"
RDSHOST="RDSHOSTS"
RDSPASS="$MYDBPASS"
RDSNAME="$MYDBNAME"
echo ""
echo -n "Nombre de la copia de seguridad? = "
read INPUT
if [ \$INPUT ]; then
  BAK="\$INPUT"
fi
rm -r /home/nginx/domains/"\$DOMINIO" --force
cp -ar /root/"\$DOMINIO"/backups-wp/"\$BAK"-"\$DOMINIO" /home/nginx/domains/"\$DOMINIO"
mysql -u \$MYSERVER -h"\$RDSHOST" -D \$RDSNAME -p"\$RDSPASS" < /root/"\$DOMINIO"/backups-db/"\$BAK"-db-bk.sql
sh /root/"\$DOMINIO"/restart.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/deletebak.sh
#EJECUTE BACKUP
DOMINIO="$MYDOMAIN"
MYSERVER="$MYSERVER"
RDSHOST="RDSHOSTS"
RDSPASS="$MYDBPASS"
echo ""
echo -n "Nombre de la copia a borrar? = "
read INPUT
if [ \$INPUT ]; then
  BAK="\$INPUT"
fi
rm -r /root/"\$DOMINIO"/backups-wp/"\$BAK"-"\$DOMINIO" --force
rm -f /root/"\$DOMINIO"/backups-db/"\$BAK"-db-bk.sql
sh /root/"\$DOMINIO"/restart.sh
EOF

cat <<EOF >> $MYDOMAIN/.sh/uninstall.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                   https://ventasimpactantes.com/script                    ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========                           !  A T E N C I Ó N  !                           ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
DOMINIO=$MYDOMAIN
echo ""
echo -n " * ¿ ESTAS SEGURO DE ELIMINAR EL SITIO WORDPRESS \$DOMINIO Y BORRAR TODO EL CONTENIDO ? *"
echo ""
echo -n " - Asegúrate de haber realizado una copia de seguridad de tus datos en \$DOMINIO"
echo ""
echo -n " * ESTE PROCESO ES ¡IRREVERSIBLE!. Escribe 'eliminar' para proceder  [ salir / eliminar ]: "
read INPUT
if [ \$INPUT = "ELIMINAR" -o \$INPUT = "Eliminar" -o \$INPUT = "eliminar" ]
then
continue
else
exit
fi
DOMINIO="$MYDOMAIN"
echo -e "y" | /root/tools/wp_uninstall_"\$DOMINIO".sh
rm -f /root/tools/wp_uninstall_"\$DOMINIO".sh
rm -rf /root/"\$DOMINIO"/backups-wp /root/"\$DOMINIO"/backups-db
sh /root/"\$DOMINIO"/restart.sh
PASS="\$(cat /root/.my.cnf | grep 'password' | sed -e 's/password=//g')"
mysql -u root -p"\$PASS"
EOF

cat <<EOF >> $MYDOMAIN/.sh/sub.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "***********                          ! B I E N V E N I D O !                          ***********"
echo "***********                                                                           ***********"
echo "================================================================================================="
echo "===========                                                                           ==========="
echo "===========                    A N T E S   D E   C O N T I N U A R                    ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo ""
echo " Crea una base de datos en RDS con el nombre del subdiminio que vas a crear: sub.$MYDOMAIN "
echo ""
echo " Al dirigirte a RDS, crear la base de datos escribiendo en mayúscula lo siguiente: "
echo ""
echo " CREATE DATABASE sub; (el subdominio en minúscula y pon el punto y coma) y oprime [enter]"
echo ""
echo " Luego escribe exit [enter] para salir y vuelve a ejecutar este Script escribiendo 'sh sub'  "
echo ""
echo " -  Si ya creaste la base de datos escribe 'sub' para seguir con la creación del subdominio "
echo ""
echo -n " -  Para ser redirigido a RDS y crear la base de datos escribe 'rds' ?  [ sub / rds ]: "
read INPUT
if [ \$INPUT = "rds" -o \$INPUT = "RDS" -o \$INPUT = "Rds" ]
then
  sh /root/$MYDOMAIN/loginrds.sh
else
  sh /root/$MYDOMAIN/subdom.sh
fi
EOF

cat <<EOF >> $MYDOMAIN/.sh/subdom.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========      C R E A C I Ó N    D E   S U B D O M I N I O   W O R D P R E S S     ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
DOMINIO="$MYDOMAIN"
echo ""
echo "                                   GENERA LOS DATOS DE ACCESO                                    "
echo ""
echo -n " - Escribe el 'SUBDOMINIO', debe ser igual al nombre de base de datos que creaste = "
read INPUT
if [ \$INPUT ]; then
SUBB="\$INPUT"
SUB="\$SUBB.\$DOMINIO"
export SUB
fi
if [ -d \$SUB ]
then
  echo "================================================================================================="
  echo "===========                                                                           ==========="
  echo "===========             ¡  Ya existe el Subdominio \$SUB  !"
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "***********                                                                           ***********"
  echo "***********    Para instalar este subdominio desde cero debes eliminarlo primero      ***********"
  echo "***********    sh \$SUB/subuninstall.sh                                           "
  echo "***********                                                                           ***********"
  echo "*************************************************************************************************"
  exit
else
  continue
fi
echo ""
echo -n " - Escribe un 'USUARIO' para ingresar al subdominio de WordPress, luego oprime [enter] = "
read INPUT
if [ \$INPUT ]; then
WPUSER="\$INPUT"
export WPUSER
fi
echo ""
echo -n " - Crea una 'CONTRASEÑA' que contenga mayúsculas y símbolos y oprime [enter] = "
read INPUT
if [ \$INPUT ]; then
WPPASSS="\$INPUT"
WPPAS="\$(echo "\$WPPASSS" | sed 's/\\$/\\\\$/g')"
WPPASS="\$(echo "\$WPPAS" | sed 's/\\$/\\\\$/g')"
export WPPASS
fi
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========                          !  R E V I S E M O S  !                          ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo ""
echo "                    ESTAS SON LOS DATOS DE ACCESO PARA EL SUBDOMINIO WORDPRESS:                  "
echo ""
echo "           'SUBDOMINIO' a crear    = \$SUB           "
echo "           'USUARIO' de WordPress  = \$WPUSER                                 "
echo "           'CONTRASEÑA' De Usuario = \$WPPASSS                       "
echo ""
echo -n "   ¿ Son Correctas Estas Credenciales ?                                                       "
echo ""
echo ""
echo -n " -  Escribe 'crear' para construir el subdominio en wordpress"
echo ""
echo -n " -  Escribe 'cambiar' para editar las credenciales de nuevo...                   "
echo ""
echo -n " -  Escribe 'cancelar' para salir del script  [ cancelar / cambiar / crear ]: "
read INPUT
if [ \$INPUT = "cancelar" -o \$INPUT = "Cancelar" -o \$INPUT = "CANCELAR" ]
then
  printf "\033c"
  echo "*************************************************************************************************"
  echo "***********                                                                           ***********"
  echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
  echo "***********                                                                           ***********"
  echo "===========                                                                           ==========="
  echo "===========                          !  C A N C E L A D O  !                          ==========="
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  echo "***********                                                                           ***********"
  echo "***********                                                                           ***********"
  echo "***********      Para crear un nuevo subdominio escribe 'sh sub' y oprime [enter]     ***********"
  echo "***********                                                                           ***********"
  echo "***********                                                                           ***********"
  echo "*************************************************************************************************"
  echo ""
  exit
elif [ \$INPUT = "cambiar" -o \$INPUT = "CAMBIAR" -o \$INPUT = "Cambiar"  ]
then
  sh /root/sub
else
  printf "\033c"
  echo "*************************************************************************************************"
  echo "***********                                                                           ***********"
  echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
  echo "***********                                                                           ***********"
  echo "===========                                                                           ==========="
  echo "===========     !  C R E A N D O   A R C H I V O S   Y   D I R E C T O R I O S  !     ==========="
  echo "===========                                                                           ==========="
  echo "================================================================================================="
  mkdir /root/\$SUB
  cp -ar /root/$MYDOMAIN/* /root/\$SUB
  rm -f /root/\$SUB/uninstall.sh /root/\$SUB/wp.sh /root/\$SUB/mysql.sh /root/\$SUB/loginrds.sh /root/\$SUB/subdom.sh
  sed -i "s/$MYDOMAIN/\$SUB/g" /root/\$SUB/*.sh
  sed -i 's/RDSNAME="$MYDBNAME"/RDSNAME="'\$SUBB'"/g' /root/\$SUB/*.sh
  sed -i "s/subd/\$SUBB/g" /root/\$SUB/*.tf
  sed -i "s/subd/\$SUBB/g" /root/\$SUB/cfsubd
  sed -i "s/SUBDD/\$SUB/g" /root/\$SUB/subdominio.sh
  sed -i "s/WPSR/\$WPUSER/g" /root/\$SUB/subdominio.sh
  sed -i "s/WPPS/\$WPPASS/g" /root/\$SUB/subdominio.sh
  sh /root/\$SUB/subdominio.sh
fi
EOF

cat <<EOF >> $MYDOMAIN/.sh/subdominio.sh
SUB=SUBDD
WPUSER=WPSR
WPPASS=WPPS
EMAIL='admin@$MYDOMAIN'
sh /root/\$SUB/cfsubd
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========   ! I N I C I A N D O    C R E A C I Ó N    D E   S U B D O M I N I O  !  ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo -e "22\ny\n\$SUB\ny\ny\n4\n\n\n\n\nn\nn\ny\ny\n\$WPUSER\n\$WPPASS\n\$EMAIL\n1\nn\ny\n24\ny\n24" | centmin
sh /root/"\$SUB"/bk-local.sh
sh /root/"\$SUB"/rds.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========             !  C O N F I G U R A N D O   W O R D P R E S S  !             ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
sh /root/"\$SUB"/wordpress.sh
sh /root/"\$SUB"/permisos.sh
echo "Creando Copia de Seguridad"
echo -e "inicio" | sh /root/"\$SUB"/createbak.sh > /dev/null 2>&1
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========            !  C R E A N D O   B U K E T   A M A Z O N   S 3  !            ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
cd ~/\$SUB/
terraform init
cd ~/\$SUB/
terraform apply --auto-approve
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********                SERVIDOR CREADO POR EL CONSTRUCTOR 'VIM-v2.0'              ***********"
echo "***********                                                                           ***********"
echo "***********                             ¡  G E N I A L  !                             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========    ! W O R D P R E S S   I N S T A L A D O   E X I T O S A M E N T E !    ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
echo ""
echo "           ¡ F A B U L O S O ! Ya puedes entrar a tu Panel de Wordpress en el siguiente          "
echo ""
echo "           enlace, inicia sesión con el Usuario y Contraseña que creaste:                        "
echo ""
echo ""
echo "           https://\$SUB/wp-admin/                                                  "
echo ""
echo ""
echo "Estos son las Credenciales para tus copias de seguridad"
echo ""
echo ""
rm -f /home/nginx/domains/\$SUB/public/maintenance.html
cd ~/\$SUB/
terraform 
rm -f /root/\$SUB/subdominio.sh
echo ""
EOF

cat <<EOF >> $MYDOMAIN/.sh/mysql.sh
PASS="\$(cat /root/.my.cnf | grep 'password' | sed -e 's/password=//g')"
mysql -u root -p"\$PASS"
EOF

cat <<EOF >> $MYDOMAIN/.sh/loginrds.sh
MYSERVER="$MYSERVER"
RDSHOST="RDSHOSTS"
RDSPASS="$MYDBPASS"
RDSNAME="$MYDBNAME"
mysql -u "\$MYSERVER" -h"\$RDSHOST" -D "\$RDSNAME" -p"\$RDSPASS"
EOF

#S3 SUBD
cat <<EOF >> $MYDOMAIN/.sh/s3.tf
provider "aws" {
  access_key = var.aws_access_key
  secret_key = var.aws_secret_key
  region = var.aws_region
}
resource "aws_s3_bucket" "s3-bak-subd" {
  bucket = "s3-bak-subd-$MYSERVER"
  acl    = "private"
  acceleration_status = "Enabled"
  force_destroy = true
  tags = {
    Name        = "My bucket Bak"
    Environment = "Dev"
  }
}
# IAM Users Bucket BAK
resource "aws_iam_user" "user-s3-bak-subd" {
  name = "user-s3-bak-subd-$MYSERVER"
}
resource "aws_iam_access_key" "key-s3-bak-subd" {
  user = aws_iam_user.user-s3-bak-subd.name
}
resource "aws_iam_user_policy" "policys3-bak-subd" {
  name = "policys3-bak-subd"
  user = aws_iam_user.user-s3-bak-subd.name
  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Effect": "Allow",
          "Action": "*",
          "Resource": "*"
      }
  ]
}
	EOF
}
EOF

#S3 VAR SUBD
cat <<EOF >> $MYDOMAIN/.sh/s3_var.tf
variable "aws_access_key" {}
variable "aws_secret_key" {}
variable "aws_region" {
  description = "The AWS region to create things in."
  default     = "us-east-1"
}
EOF

#OUTPUTS SUBD
cat <<EOF >> $MYDOMAIN/.sh/subdoutputs.tf
output "A_Clave-de-Acceso-S3-subd" {
  description = "The access key ID"
  value = element(
    concat(
      aws_iam_access_key.key-s3-bak-subd.*.id,
      aws_iam_access_key.key-s3-bak-subd.*.id,
      [""],
    ),
    0,
  )
}
output "B_Clave-Secreta-de-S3-subd" {
  description = "The access key secret"
  value       = element(concat(aws_iam_access_key.key-s3-bak-subd.*.secret, [""]), 0)
}
output "C_Nombre_Ubicación_de_s3-subd" {
  description = "The name bucket"
  value       = "\${aws_s3_bucket.s3-bak-subd.bucket}"
}
EOF

#UNINSTALL SUBD
cat <<EOF >> $MYDOMAIN/.sh/subuninstall.sh
printf "\033c"
echo "*************************************************************************************************"
echo "***********                                                                           ***********"
echo "***********             SERVIDOR CREADO CON EL CONSTRUCTOR WEB 'VIM-v2.0'             ***********"
echo "***********                                                                           ***********"
echo "===========                                                                           ==========="
echo "===========                           !  A T E N C I Ó N  !                           ==========="
echo "===========                                                                           ==========="
echo "================================================================================================="
SUB="$MYDOMAIN"
echo ""
echo -n " * ¿ ESTAS SEGURO DE ELIMINAR EL SUBDOMINIO \$DOMINIO Y BORRAR TODO EL CONTENIDO ? *"
echo ""
echo -n " - Asegúrate de haber realizado una copia de seguridad de tus datos en \$DOMINIO"
echo ""
echo -n " * ESTE PROCESO ES ¡IRREVERSIBLE!. Escribe 'eliminar' para proceder  [ salir / eliminar ]: "
read INPUT
if [ \$INPUT = "ELIMINAR" -o \$INPUT = "Eliminar" -o \$INPUT = "eliminar" ]
then
continue
else
exit
fi
cd ~/\$SUB/
terraform destroy --auto-approve
cd
echo -e "y" | /root/tools/wp_uninstall_\$SUB.sh
rm -f /root/tools/wp_uninstall_\$SUB.sh
sh /root/\$SUB/restart.sh
rm -rf /root/\$SUB/
PASS="\$(cat /root/.my.cnf | grep 'password' | sed -e 's/password=//g')"
mysql -u root -p"\$PASS"
EOF

cat <<EOF >> $MYDOMAIN/.sh/cfsubd
DOMINIO=$MYDOMAIN
MAIL=$EML
CFAP=$CFAPI
#curl -X GET "https://api.cloudflare.com/client/v4/accounts?page=1&per_page=20&direction=desc" \-H "X-Auth-Email: \$MAIL" \-H "X-Auth-Key: \$CFAP" \-H "Content-Type: application/json" >> id.txt
#CFID="\$(cat id.txt | sed -r 's/","/\n/g' | sed -n '/id/p' | sed 's/{.*":"//' )"
rm -f id.txt
curl -X GET "https://api.cloudflare.com/client/v4/zones?name=\$DOMINIO&page=1&per_page=20&order=status&direction=desc&match=all" \-H "X-Auth-Email: \$MAIL" \-H "X-Auth-Key: \$CFAP" \-H "Content-Type: application/json" >> zone.txt
ZONEID="\$(cat zone.txt | sed -r 's/","/\n/g' | sed '2,\$d' | sed 's/{.*":"//' )"
rm -f zone.txt
curl -X POST "https://api.cloudflare.com/client/v4/zones/\$ZONEID/dns_records" \-H "X-Auth-Email: \$MAIL" \-H "X-Auth-Key: \$CFAP" \-H "Content-Type: application/json" \--data '{"type":"CNAME","name":"subd","content":"@","ttl":1,"priority":10,"proxied":false}'
EOF

wget -qO terraform https://raw.githubusercontent.com/iversating/vimzwei/master/terraform2
sh terraform
